[tox]
envlist =
    py36,py37,
    py3-cover,coverage,
skip_missing_interpreters = True

[testenv]
# Most of these are defaults but if you specify any you can't fall back
# to defaults for others.
basepython =
    py36: python3.6
    py37: python3.7
    py3: python3.6

install_command = python -m pip install {opts} {packages} -cconstraints.txt

# requirements-build.txt needed for building the wheel in each testenv
deps =
    -rrequirements-test.txt
pip_pre=True
passenv = NUMBER_OF_PROCESSORS  # needed for some multiprocessing features on windows (numpy, scipy etc)
          HOME         # Linux home env
          CODECOV_TOKEN             # codecov
          TOXENV CI TRAVIS TRAVIS_* # travis and codecov
commands =
    pip check
    python -m pytest --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel
    python -c "import shutil; shutil.rmtree('build')"

[testenv:py3-cover]
commands =
    pip check
    python -m pytest --cov . --cov-config=tox.ini --cov-report xml:coverage-{envname}.xml --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel
    python -c "import shutil; shutil.rmtree('build')"
    codecov
setenv =
    COVERAGE_FILE=.coverage.py3

[testenv:coverage]
basepython = python3.6
commands =
    coverage erase
    coverage combine
    coverage xml
    coverage report --show-missing
deps =
    coverage
setenv =
    COVERAGE_FILE=.coverage

# Inline pytest cfg start here
[pytest]
# exclude directories
norecursedirs=env .tox
# fail on XPASS
xfail_strict = true

# Inline coverage config
# Toxic fun fact: Make sure the PATH will not be filtered out by these blob expressions
# Aiming at Jenkins builds names. Yes.. it happened, a Build was named xx-tests and then the *tests/* blob filtered the whole path
# so coverage failed! yay!
[run]
omit=
    setup.py
    *__init__.py
    */tests/*
    .tox*
